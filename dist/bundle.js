!function(t){function e(e){for(var r,a,u=e[0],c=e[1],s=e[2],f=0,d=[];f<u.length;f++)a=u[f],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&d.push(o[a][0]),o[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(t[r]=c[r]);for(p&&p(e);d.length;)d.shift()();return i.push.apply(i,s||[]),n()}function n(){for(var t,e=0;e<i.length;e++){for(var n=i[e],r=!0,u=1;u<n.length;u++){var c=n[u];0!==o[c]&&(r=!1)}r&&(i.splice(e--,1),t=a(a.s=n[0]))}return t}var r={},o={0:0},i=[];function a(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=t,a.c=r,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)a.d(n,r,function(e){return t[e]}.bind(null,r));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="";var u=window.webpackJsonp=window.webpackJsonp||[],c=u.push.bind(u);u.push=e,u=u.slice();for(var s=0;s<u.length;s++)e(u[s]);var p=c;i.push([1,1]),n()}([,function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,o,i,a=n(0),u=n(4);r=window.innerWidth-20,o=window.innerHeight-20,i={type:a.AUTO,width:r,height:o,physics:{default:"arcade",arcade:{gravity:{y:200}}},scene:[u.default]},new a.Game(i)},,,function(t,e,n){"use strict";var r,o=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),a=n(5),u=n(7),c=n(8),s=function(t){function e(){var e=t.call(this,"PlayScene")||this;return e.ASTEROIDS=[],e.NUM_OF_ASTEROIDS=6,e}return o(e,t),e.prototype.preload=function(){this.load.image("background",c),this.load.image(a.default.textureKey,a.default.image),this.load.image("asteroid",u)},e.prototype.create=function(){this.createBackground(),this.createRocket(),this.createAsteroids(5)},e.prototype.update=function(){var t=this;this.ASTEROIDS.forEach((function(e){return t.moveAsteroid(e,t.NUM_OF_ASTEROIDS)})),this.moveBackground()},e.prototype.createBackground=function(){var t=window.innerWidth-20,e=window.innerHeight-20;this.BACKGROUND=this.add.tileSprite(t/2,e/2,t,e,"background")},e.prototype.createRocket=function(){this.ROCKET=new a.default(this,{x:400,y:100}),this.ROCKET.setVelocity(100,200)},e.prototype.createAsteroids=function(t){for(var e=0;e<t;e++){var n=this.add.image(i.Math.Between(window.innerWidth+50,window.innerWidth+1500),i.Math.Between(0,window.innerHeight),"asteroid");this.ASTEROIDS.push(n)}},e.prototype.moveAsteroid=function(t,e){t.x-=e,t.x<-50&&(t.x=window.innerWidth+20,t.y=i.Math.Between(0,window.innerHeight))},e.prototype.moveBackground=function(){this.BACKGROUND.tilePositionX+=.5},e}(i.Scene);e.default=s},function(t,e,n){"use strict";var r,o=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),a=n(6),u=function(t){function e(n,r){t.call(this,n,r.x,r.y,e.textureKey);var o=n.physics.add.sprite(r.x,r.y,e.textureKey);return o.scale=.2,o.angle=90,o.setBounce(1,1),o.setCollideWorldBounds(!0),o}return o(e,t),e.textureKey="ROCKET",e.image=a,e}(i.Physics.Arcade.Sprite);e.default=u},function(t,e,n){t.exports=n.p+"ebb32283e50f8104c2482729a1379ec8.png"},function(t,e,n){t.exports=n.p+"8751dcdbbc5945aa946f64faa146d65e.svg"},function(t,e,n){t.exports=n.p+"5f66d111b72452bb65bb2b14164f94d2.jpg"}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,